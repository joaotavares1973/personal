package br.com.bpss.hg.controller;

import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.support.SessionStatus;

import br.com.bpss.hg.domain.Usuario;
import br.com.bpss.hg.dto.GestaoOperacoesDTO;
import br.com.bpss.hg.repository.GestaoOperacoesRepository;
import br.com.bpss.hg.repository.MainRepository;
import br.com.bpss.hg.service.PermissoesService;
import br.com.bpss.hg.service.GenericService;

@Controller
public class GestaoOperacoesController {

	@Autowired
	private MainRepository mainRepository;
	
	@Autowired
	private GestaoOperacoesRepository gestaoOperacoesRepository;

	@Autowired
	UtilsService utils;

	@Autowired
	PermissoesService permissoesService;

	final static Logger logger = Logger.getLogger(GestaoOperacoesController.class);

	@RequestMapping(value = "/gestorOperacoes.bpss", method = RequestMethod.GET)
	public String gestorOperacoes(Model model, HttpSession session, SessionStatus status) {

		//boolean permissao = permissoesService.permicaoAutorizada((String) session.getAttribute("usuario"), "514");

		//if (!permissao)
		//	return "jsp/usuarioSemPermissao";

		List<Object> operacoes = gestaoOperacoesRepository.listarGestaoOperacoes(new GestaoOperacoesDTO());
		
		model.addAttribute("operacoes", operacoes);

		return "jsp/listarOperacoes";

	}
	
	@RequestMapping(value = "/gestorOperacoesFiltro.bpss", method = RequestMethod.POST)
	public String gestorOperacoesFiltro(Model model, HttpSession session, SessionStatus status,
			@RequestParam("cdContrato") String cdContrato, @RequestParam("dsTipoOperacao") String dsTipoOperacao,
			@RequestParam("nmGrpProduto") String nmGrpProduto, @RequestParam("mesAno") String mesAno,
			@RequestParam("nmFixacaoTipo") String nmFixacaoTipo, @RequestParam("qtde") String qtde,
			@RequestParam("vlFixado") String vlFixado, @RequestParam("status") String cdStatus) {

		boolean permissao = permissoesService.permicaoAutorizada((String) session.getAttribute("usuario"), "514");

		if (!permissao)
			return "jsp/usuarioSemPermissao";

		List<Object> operacoes = gestaoOperacoesRepository.listarGestaoOperacoes(new GestaoOperacoesDTO());

		model.addAttribute("operacoes", operacoes);

		return "jsp/listarOperacoes";

	}
	
	@RequestMapping(value = "/carregarOperacoes.bpss", method = RequestMethod.POST, produces = MediaType.TEXT_PLAIN_VALUE)
	public @ResponseBody String carregarOperacoes( Model model, HttpSession session) {
		
		Object retorno = gestaoOperacoesRepository.carregarOperacoes();

		return "OK";
	}	
	
}